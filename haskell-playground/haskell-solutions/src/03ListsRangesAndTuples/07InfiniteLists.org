If you don't specify the upper limit, it will be an infinite list.

e.g. How will you get the first 24 multiples of 13?
other than doing [13,26..24*13]

#+begin_src haskell :exports both :results output
take 24 [13, 26..]
#+end_src

#+RESULTS:
: [13,26,39,52,65,78,91,104,117,130,143,156,169,182,195,208,221,234,247,260,273,286,299,312]

Here are a handful of collections that produce infinite lists..

~cycle~ takes a list and cycles it into an infinite list. 
If you just try to display the result, it will go on forever so you have to slice it off somewhere.

#+begin_src haskell :exports both :results output
take 10 (cycle [1,2,3])
take 12 (cycle "LOL ")
#+end_src

#+RESULTS:
: [1,2,3,1,2,3,1,2,3,1]
: LOL LOL LOL 

~repeat~ takes an element and produces an infinite list of just that element. It's like cycling a list with only one element.
#+begin_src haskell :exports both :results output
take 10 (repeat 5) 
#+end_src

#+RESULTS:
: [5,5,5,5,5,5,5,5,5,5]

Use the replicate function if you want a finite list with the same element in the list. 
#+begin_src haskell :exports both :results output
replicate 3 10
#+end_src

#+RESULTS:
: [10,10,10]
