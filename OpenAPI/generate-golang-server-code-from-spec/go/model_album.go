// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Albums API
 *
 * This service provides API to manage albums.
 *
 * API version: v1.0.0
 */

package openapi


import (
	"errors"
)



type Album struct {

	// Album author, can be empty for multi-artist compilations.
	Artist string `json:"artist,omitempty"`

	// ID is a unique string that determines album.
	Id string `json:"id"`

	// Price in USD.
	Price float32 `json:"price,omitempty"`

	// Title of the album.
	Title string `json:"title"`
}

// AssertAlbumRequired checks if the required fields are not zero-ed
func AssertAlbumRequired(obj Album) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"title": obj.Title,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertAlbumConstraints checks if the values respects the defined constraints
func AssertAlbumConstraints(obj Album) error {
	if obj.Price < 0 {
		return &ParsingError{Param: "Price", Err: errors.New(errMsgMinValueConstraint)}
	}
	return nil
}
