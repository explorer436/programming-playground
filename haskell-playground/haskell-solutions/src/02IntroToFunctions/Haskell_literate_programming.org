Reference for set-up: https://dev.to/viglioni/creating-haskell-notebooks-with-org-mode-4h7

* Writing single line Haskell code

#+begin_src haskell :exports both
helloworld = "hello" ++ " " ++ "world!"
helloworld
#+end_src

#+RESULTS:
: hello world!

What is the type signature of a function? Just ask ghci
:t largestDivisible
#+begin_src haskell :exports both
helloworld = "hello" ++ " " ++ "world!"
:t helloworld
#+end_src

#+RESULTS:
: helloworld :: [Char]

* Writing multi line Haskell code

The default way that org-babel compiles your code is using GHCi, so if you have to write a multiline code, then you need to do it as if we were inside a GHCi buffer:

#+begin_src haskell :exports both
:{
-- a very verbose way to sum a sequence of numbers:
sumInts :: Int -> Int -> Int
sumInts a b =
  if a == b
    then b
    else (+ a) $ (sumInts (a + 1) b)
:}

map (\[a,b] -> sumInts a b) [[0, 1] , [1, 3], [1,5], [2,10]]
#+end_src

#+RESULTS:
| 1 | 6 | 15 | 54 |
