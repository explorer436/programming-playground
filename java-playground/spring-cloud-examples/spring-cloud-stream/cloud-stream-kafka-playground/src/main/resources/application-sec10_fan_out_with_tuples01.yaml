spring:
  cloud:
    function:
      definition: digitalDeliveryConsumer01;physicalDeliveryConsumer01;orderEventProducer;processor01
    stream:
      bindings:
        # implicit bindings - based on function names
        orderEventProducer-out-0:
          destination: order-events
        processor01-in-0:
          destination: order-events
          group: processor-group
        digitalDeliveryConsumer01-in-0:
          destination: digital-topic
          group: digital-group
        physicalDeliveryConsumer01-in-0:
          destination: physical-topic
          group: physical-group
        processor01-out-0:
          destination: digital-topic
        processor01-out-1:
          destination: physical-topic
      # reactor.core.Exceptions$ErrorCallbackNotImplemented: org.apache.kafka.common.errors.SerializationException: Can't convert key of class java.lang.String to class org.apache.kafka.common.serialization.ByteArraySerializer specified in key.serializer
      # Caused by: org.apache.kafka.common.errors.SerializationException: Can't convert key of class java.lang.String to class org.apache.kafka.common.serialization.ByteArraySerializer specified in key.serializer
      # We have to specify the type of Serializer and Deserializer for headers
      # By default, spring expects ByteArraySerializer and not Strings
      kafka:
        binder:
          producer-properties:
            "key.serializer": org.apache.kafka.common.serialization.StringSerializer
          consumer-properties:
            "key.deserializer": org.apache.kafka.common.serialization.StringDeserializer
            "auto.offset.reset": "earliest"
            "group.instance.id": "1"