* Generate server code from OpenAPI specification file

docker run --rm --volume "${PWD}:/local" openapitools/openapi-generator-cli generate -i /local/<path_to_your_openapi_spec> -g rust-server -o /local/<output_directory>

Do not use ~--volume~

Use the newer ~--mount~ way.

#+begin_src 
-v or --volume flag (older, simpler syntax):
docker run -v /path/on/host:/path/in/container <image_name>
or
docker run --volume /path/on/host:/path/in/container <image_name>

--mount flag (newer, more verbose, and recommended syntax):
docker run --mount type=bind,source=/path/on/host,target=/path/in/container <image_name>  
#+end_src

This one worked

#+begin_src 
[explorer436@explorer436-lenovo-legion-82b1 generate-code-from-spec]$ docker run --rm --mount type=bind,source=/home/explorer436/Downloads/GitRepositories/programming-playground/OpenAPI/generate-rust-server-code-from-spec,target=/home/explorer436/Downloads/GitRepositories/programming-playground/OpenAPI/generate-rust-server-code-from-spec openapitools/openapi-generator-cli generate -i /home/explorer436/Downloads/GitRepositories/programming-playground/OpenAPI/generate-rust-server-code-from-spec/openapi-albums.yaml -g rust-server -o /home/explorer436/Downloads/GitRepositories/programming-playground/OpenAPI/generate-rust-server-code-from-spec
#+end_src


