* springboot jpa

A sample project that uses h2 for database.

TutorialRepositoryUsingJPQA shows how to interact with h2 database for basic CRUD operations on one table using Spring JPA's JPQL.

* Running and testing

1. Run Spring Boot application with command: mvn spring-boot:run
1. H2 is set-up by maven dependencies.
1. After starting the application, open H2 console with url: http://localhost:8080/h2-ui (Make sure the JDBC url for the conection is: jdbc:h2:mem:testdb)
1. When you login to the console, you should see the tables created for the entities defined in the application.

** CarInventory examples

This shows how to write tests that interact with the h2 database instead of using mocking.

** Tutorials package

*** src/main/java/com/mycompany/tutorial/simplecrudwithjpa

[[./SimpleCrudWithJPA.org]]

*** src/main/java/com/mycompany/tutorial/jpqa

[[./JPQA.org]]

*** src/main/java/com/mycompany/tutorial/nativequeriesusingjparepository

[[./Native Queries using Jpa.org]]

** Testing

Look at this file: [[./Testing.org]]

** References

https://www.bezkoder.com/spring-boot-jpa-h2-example/
https://www.bezkoder.com/jpa-repository-query/
https://www.bezkoder.com/jpa-native-query/
https://www.bezkoder.com/spring-jpa-query/

Pending
https://www.bezkoder.com/spring-boot-pagination-filter-jpa-pageable/
https://www.bezkoder.com/spring-data-sort-multiple-columns/

https://thorben-janssen.com/spring-data-jpa-dto-native-queries/
