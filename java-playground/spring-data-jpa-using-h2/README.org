* springboot jpa

A sample project that uses h2 for database.


Run Spring Boot application with command: mvn spring-boot:run
Letâ€™s open H2 console with url: http://localhost:8080/h2-ui

When you login to the console, you should see the tables created for the entities defined in the application.

** Inventory package

This shows how to write tests that interact with the h2 database instead of using mocking.

** Tutorials package

This shows how to interact with h2 database for basic operations on one table using Spring JPA.

Curl requests to perform various operations on the Tutorials table.

create single tutorial:
#+begin_src 
curl --location --request POST 'http://localhost:8080/api/tutorial' \
--header 'Content-Type: application/json' \
--data-raw '{
"title": "sample title for book 1",
"description":  "sample description for book 1",
"published": true
}'
#+end_src

create tutorials bulk request
#+begin_src 
curl --location --request POST 'http://localhost:8080/api/tutorials' \
--header 'Content-Type: application/json' \
--data-raw '[
    {
        "title": "sample title for book 3",
        "description": "sample description for book 3",
        "published": true
    },
    {
        "title": "sample title for book 4",
        "description": "sample description for book 4",
        "published": false
    }
]'  
#+end_src

get all tutorials from the table
#+begin_src 
curl --location --request GET 'http://localhost:8080/api/tutorials'
#+end_src

get tutorials by id
#+begin_src 
curl --location --request GET 'http://localhost:8080/api/tutorials/2'
#+end_src

update tutorial by id
#+begin_src 
curl --location --request PUT 'http://localhost:8080/api/tutorials/2' \
--header 'id: 2' \
--header 'Content-Type: application/json' \
--data-raw '{
    "title": "sample title for book 2",
    "description": "updated sample description for book 2",
    "published": false
}'
#+end_src

delete tutorial by id
#+begin_src 
curl --location --request DELETE 'http://localhost:8080/api/tutorials/2'
#+end_src

delete all tutorials
#+begin_src 
curl --location --request DELETE 'http://localhost:8080/api/tutorials'
#+end_src

get tutorials that are published
#+begin_src 
curl --location --request GET 'http://localhost:8080/api/tutorials/published'
#+end_src

** References

https://www.bezkoder.com/spring-boot-jpa-h2-example/
