* How to set JAVA_HOME in Linux for all users

*** How to find out where Java is installed?

If Java is installed using package managers or by using any other ways other than downloading the JDK from https://openjdk.java.net/install/ , it can get tricky to find out where it is installed.

1. The following command will tell you a lot of information about your java version, including the vendor. It works on Windows, Mac, and Linux.

   #+begin_src 
   java -XshowSettings:properties -version  
   #+end_src

2. Here is another way to find it.

   #+begin_src 
   find /usr/lib/jvm/java-1.x.x-openjdk  
   #+end_src

*** Download Java from openjdk website

A more straight-forward way is to download it from openjdk install page and extracting it using the command:
#+begin_src 
$ tar xvf openjdk-13*_bin.tar.gz  
#+end_src

Confirm the version of the new JVM using the -version option:

#+begin_src 
$ cd jdk-18.0.12+7/bin
$ ./java -version  
#+end_src

The version output of the JVM looks similar to this:

#+begin_src
openjdk version "18" 2022-03-22
OpenJDK Runtime Environment (build 18+36-2087)
OpenJDK 64-Bit Server VM (build 18+36-2087, mixed mode, sharing)
#+end_src

*** How to set JAVA_HOME and PATH environment variables after figuring out where the jdk is?

Look at Linux/Path.org for details about how the path can be set in .bashrc

+You can also set it in /etc/profile. Try the .bashrc option before trying this.+
+#+begin_src+
+vim /etc/profile  +
+#+end_src+

Prepend sudo if logged in as not-privileged user, ie. sudo vim

Press 'i' to get in insert mode and add this to the file:

#+begin_src 
export JAVA_HOME="path to the jdk directory that you extracted using the tar xvf command"
export PATH=$JAVA_HOME/bin:$PATH  
#+end_src

It should look like this:
#+begin_src 
export JAVA_HOME=~/Downloads/jdk-18
export PATH=$JAVA_HOME/bin:$PATH  
#+end_src

logout and login again, reboot, or use source /etc/profile to apply changes immediately in your current shell 

Test if they are set correctly:
#+begin_src 
echo $JAVA_HOME  
echo $path
#+end_src

*** Macbook

#+begin_src 
echo "export JAVA_HOME=/opt/homebrew/opt/openjdk" >> ~/.zshrc
echo "export PATH=/opt/homebrew/opt/openjdk/bin:$PATH" >> ~/.zshrc
source ~/.zshrc
java -version
#+end_src

* Checking JAVA_HOME on Linux

Open a terminal and type:
#+begin_src 
> $JAVA_HOME/bin/javac -version  
#+end_src

If JAVA_HOME points to a JDK, the output should look like:
#+begin_src 
> javac 1.X.0_XX  
#+end_src

If JAVA_HOME doesn't point to a JDK, the OS will throw an error message:
#+begin_src 
> bash: /bin/javac: No such file or directory  
#+end_src

* Troubleshooting installation

Even if you install openjdk using HomeBrew in Macbook, make sure to run the commands to set ~JAVA_HOME~ and ~PATH~ using the commands from terminal.
If not, installation of other components like ~maven~ will have issues.

This will also help with the scenario where you have multiple jdk versions installed in the computer and you have to switch between them from time to time.
