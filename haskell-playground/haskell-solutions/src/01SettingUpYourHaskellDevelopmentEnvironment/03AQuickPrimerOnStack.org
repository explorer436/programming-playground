Quick primer on Stack

(stack --version)

stack solves the following problems:

1. Having different versions of the Haskell compiler (i.e. ghc) available on your machine without messing things up, and using the right ghc version for your project.
2. Taking care of which Haskell libraries are known to compile/build with which version of ghc.
3. Taking care of the dependency graph of libraries, so that all the libraries that your project depends on, compile successfully without you having to manually specify the version of each library. Basically stack saves you from the dependency hell problem.
4. In a sense stack is similar to the following tools from other ecosystems, which attempt to solve some, or all, of the same problems (but they may have solved them in a different manner):
   1. rvm and bundler from the Ruby world
   2. virtualenv from the Python world
   3. gvm from the Go world
   4. nvm or yarn from the NodeJS world

Always start ghci with stack ghci from within your project directory. This will ensure that the correct version of the compiler is used and that your GHCi is aware of the files in your project and the packages that your project depends on.