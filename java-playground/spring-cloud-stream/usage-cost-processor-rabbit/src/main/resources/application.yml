# The input binding destination (RabbitMQ exchange) where this application is subscribed through an anonymous auto-delete or durable queue.
# The group to specify the consumer group to which this consumer application belongs.
# The output binding destination (RabbitMQ exchange) where the producer publishes the data.
# The requiredGroups to specify the consumer groups to ensure the message delivery guarantee.

spring:
  cloud:
    stream:
      bindings:
        input:
          destination: usage-detail
          group: usage-cost-consumer
        output:
          destination: usage-cost
          producer:
            requiredGroups: logger

# The spring.cloud.stream.bindings.input.destination and spring.cloud.stream.bindings.input.group properties bind the UsageCostProcessor object's input to the usage-detail RabbitMQ exchange through the usage-detail.usage-cost-consumer durable queue.
# The spring.cloud.stream.bindings.output.destination property binds the UsageCostProcessor object's output to the usage-cost RabbitMQ exchange.
# The spring.cloud.stream.bindings.output.producer.requiredGroups property makes sure to create a durable queue named usage-cost.logger, which consumes from the usage-cost RabbitMQ exchange.

# There are many configuration options that you can choose to extend/override to achieve the desired runtime behavior when using RabbitMQ as the message broker. The RabbitMQ-specific binder configuration properties are listed in the RabbitMQ-binder documentation - https://cloud.spring.io/spring-cloud-static/spring-cloud-stream-binder-rabbit/current/reference/html/spring-cloud-stream-binder-rabbit.html#_configuration_options

server:
  port: 9002
